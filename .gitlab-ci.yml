############################################
# GLOBAL VARS

variables:
  XCODE_PROJECT: MatrixSDK.xcodeproj
  GIT_STRATEGY: fetch

############################################
# STAGES

stages:
  - test
  - podlint
  - after_success

############################################
# STAGES

cache:
  paths:
  - Carthage

############################################
# JOBS

#before_install:
#  - brew update
#  # Cocoapod
#  - brew install cocoapods || brew upgrade cocoapods
#  # SwiftLint
#  - brew install swiftlint || brew upgrade swiftlint
#  # Carthage tools
#  - brew install carthage || brew upgrade carthage
#  - curl -L -O https://github.com/YPlan/CartfileDiff/releases/download/0.1/CartfileDiff.pkg
#  - sudo installer -pkg CartfileDiff.pkg -target /
#  # xcpretty
#  - gem install xcpretty
#  # danger
#  - gem install danger danger-swiftlint

before_script:
  # bootstrap the dependencies for the project
  # you can remove if you don't have dependencies
  - PLATFORM=$PLATFORM ./scripts/bootstrap-if-needed

############################################
# TEMPLATES

.script_template: &script_definition
  script:
    - set -o pipefail
    - xcodebuild -version
    - xcodebuild -showsdks

    - xcodebuild clean -project "$XCODE_PROJECT" -scheme "$SCHEME" | xcpretty

    # Build Framework in Debug and Run Tests if specified
    - echo "BUILD FOR DEBUG"
    - if [ $RUN_TESTS == "YES" ]; then
        xcodebuild -project "$XCODE_PROJECT" -scheme "$PREFIX$SCHEME" -sdk "$SDK" -destination "$DESTINATION" -configuration Debug ONLY_ACTIVE_ARCH=NO ENABLE_TESTABILITY=YES test | xcpretty;
      else
        xcodebuild -project "$XCODE_PROJECT" -scheme "$PREFIX$SCHEME" -sdk "$SDK" -destination "$DESTINATION" -configuration Debug ONLY_ACTIVE_ARCH=NO build | xcpretty;
      fi

    - xcodebuild clean -project "$XCODE_PROJECT" -scheme "$SCHEME" | xcpretty

    # Build Framework in Release and Run Tests if specified
    - echo "BUILD FOR RELEASE"
    - if [ $RUN_TESTS == "YES" ]; then
        xcodebuild -project "$XCODE_PROJECT" -scheme "$PREFIX$SCHEME" -sdk "$SDK" -destination "$DESTINATION" -configuration Release ONLY_ACTIVE_ARCH=NO ENABLE_TESTABILITY=YES test | xcpretty;
      else
        xcodebuild -project "$XCODE_PROJECT" -scheme "$PREFIX$SCHEME" -sdk "$SDK" -destination "$DESTINATION" -configuration Release ONLY_ACTIVE_ARCH=NO build | xcpretty;
      fi

.iOS_vars: &iOS_vars
  PLATFORM: iOS
  SCHEME: MatrixSDK-iOS
  SDK: iphonesimulator10.2
  RUN_TESTS: "YES"

.macOS_vars: &macOS_vars
  PLATFORM: macOS
  SCHEME: MatrixSDK-macOS
  SDK: macosx10.12
  RUN_TESTS: "YES"
  DESTINATION: "platform=OS X,arch=x86_64"

.tvOS_vars: &tvOS_vars
  PLATFORM: tvOS
  SCHEME: MatrixSDK-tvOS
  SDK: appletvsimulator10.1
  RUN_TESTS: "YES"

.watchOS_vars: &watchOS_vars
  PLATFORM: watchOS
  SCHEME: MatrixSDK-watchOS
  SDK: watchsimulator3.1
  RUN_TESTS: "NO"

############################################
# JOBS - STAGE: TEST

# iPhone 7
iPhone 7 - OS 10.2:
  <<: *script_definition
  stage: test
  variables:
    <<: *iOS_vars
    DESTINATION: "platform=iOS Simulator,OS=10.2,name=iPhone 7"

#iPhone 6 - OS 9.3:
#  <<: *script_definition
#  stage: test
#  variables:
#    <<: *iOS_vars
#    DESTINATION: "platform=platform=iOS Simulator,OS=9.3,name=iPhone 6"

# macOS
macOS - OS 10.12:
  <<: *script_definition
  stage: test
  variables:
    <<: *macOS_vars 

# # tvOS
Apple TV 1080p - OS 10.1:
  <<: *script_definition
  stage: test
  variables:
    <<: *tvOS_vars
    DESTINATION: "OS=10.1,name=Apple TV 1080p"

#Apple TV 1080p - OS 9.2 (Debug):
#  <<: *script_definition
#  stage: test
#  variables:
#    <<: *tvOS_vars
#    DESTINATION: "OS=9.2,name=Apple TV 1080p"

# watchOS
Apple Watch Series 2 - OS 3.1:
  <<: *script_definition
  stage: test
  variables:
    <<: *watchOS_vars
    DESTINATION: "platform=watchOS Simulator,OS=3.1,name=Apple Watch Series 2 - 42mm"

#Apple Watch - OS 3.1:
#  <<: *script_definition
#  stage: test
#  variables:
#    <<: *watchOS_vars
#    DESTINATION: "platform=watchOS Simulator,OS=3.1,name=Apple Watch - 42mm"

############################################
# JOBS - STAGE: PODLINT

podlint:
  stage: podlint
  when: on_success
  script:
    - pod lib lint --allow-warnings --verbose

danger:
  stage: after_success
  when: on_success
  script:
    - danger

#codecov:
#  stage: after_success
#  when: on_success
#  script:
#    - bash <(curl -s https://codecov.io/bash)